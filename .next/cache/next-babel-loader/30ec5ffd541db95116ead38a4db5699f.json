{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Nav from '../../../components/layout';\nimport Link from 'next/link';\nimport { Modal } from '../../../components/modal';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ALL_RECORD_BY_USER_ID } from '../../../graphql/schema';\nimport { useRouter } from 'next/router';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useQuery = useQuery(GET_ALL_RECORD_BY_USER_ID, {\n    variables: {\n      userId: query\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  return __jsx(React.Fragment, null, __jsx(Nav, null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h5\", null, \"Abiodun's Medical Records \", __jsx(\"button\", {\n    className: \"btn right indigo\",\n    onClick: function onClick() {\n      return setIsOpen(true);\n    }\n  }, \"Add Record\")), __jsx(\"br\", null), loading ? __jsx(\"p\", null, \"Loading...\") : __jsx(\"table\", {\n    className: \"striped\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"#\"), __jsx(\"th\", null, \"Hospital\"), __jsx(\"th\", null, \"Created\"), __jsx(\"th\", null, \"...\"))), __jsx(\"tbody\", null, data ? data.getAllRecordByUserId.map(function (_ref, i) {\n    var transId = _ref.transId,\n        patientId = _ref.patientId,\n        createdAt = _ref.createdAt;\n    return __jsx(\"tr\", null, __jsx(\"td\", null, 1 + i, \".\"), __jsx(\"td\", null, \"Luth\"), __jsx(\"td\", null, createdAt), __jsx(\"td\", null, __jsx(Link, {\n      href: \"/hos/info/[tid]\",\n      as: \"/hos/info/\".concat(transId)\n    }, __jsx(\"a\", null, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"visibility\")))));\n  }) : null))), __jsx(Modal, {\n    title: \"Create Record\",\n    isOpen: isOpen,\n    close: function close() {\n      return setIsOpen(false);\n    },\n    isLine: true\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col s12 m6 input-field\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"bp\",\n    placeholder: \"Blood pressure\"\n  }), __jsx(\"label\", {\n    htmlFor: \"bp\"\n  }, \"First Name\"))))));\n};\n\n_s(Index, \"WTNyUxC4WKbaToeTX0PitizHgs0=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Abiodun Michael/Desktop/chainmedic/front/pages/hos/record/[id].js"],"names":["React","useState","Nav","Link","Modal","useQuery","useMutation","GET_ALL_RECORD_BY_USER_ID","useRouter","Index","isOpen","setIsOpen","query","variables","userId","data","loading","getAllRecordByUserId","map","i","transId","patientId","createdAt","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,KAAR,QAAoB,2BAApB;AACA,SAAQC,QAAR,EAAiBC,WAAjB,QAAmC,gBAAnC;AACA,SAAQC,yBAAR,QAAwC,yBAAxC;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAI;AAAA;;AAAA,kBACaR,QAAQ,CAAC,KAAD,CADrB;AAAA,MACPS,MADO;AAAA,MACAC,SADA;;AAAA,mBAEEH,SAAS,EAFX;AAAA,MAEPI,KAFO,cAEPA,KAFO;;AAAA,kBAGUP,QAAQ,CAACE,yBAAD,EAA2B;AAACM,IAAAA,SAAS,EAAC;AAACC,MAAAA,MAAM,EAACF;AAAR;AAAX,GAA3B,CAHlB;AAAA,MAGPG,IAHO,aAGPA,IAHO;AAAA,MAGFC,OAHE,aAGFA,OAHE;;AAMlB,SACQ,4BACI,MAAC,GAAD,OADJ,EAEI,iBAFJ,EAEU,iBAFV,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACA,gDAA8B;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,OAAO,EAAE;AAAA,aAAIL,SAAS,CAAC,IAAD,CAAb;AAAA;AAA9C,kBAA9B,CADA,EACyH,iBADzH,EAGOK,OAAO,GAAG,8BAAH,GACP;AAAO,IAAA,SAAS,EAAC;AAAjB,KACA,qBACA,kBAAI,sBAAJ,EAAc,6BAAd,EAA+B,4BAA/B,EAA+C,wBAA/C,CADA,CADA,EAIA,qBAEQD,IAAI,GAAGA,IAAI,CAACE,oBAAL,CAA0BC,GAA1B,CAA8B,gBAA+BC,CAA/B;AAAA,QAAEC,OAAF,QAAEA,OAAF;AAAA,QAAUC,SAAV,QAAUA,SAAV;AAAA,QAAoBC,SAApB,QAAoBA,SAApB;AAAA,WAEjC,kBAAI,kBAAK,IAAEH,CAAP,MAAJ,EAAmB,yBAAnB,EAAgC,kBAAKG,SAAL,CAAhC,EAAoD,kBAAI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,iBAAX;AAA6B,MAAA,EAAE,sBAAeF,OAAf;AAA/B,OAAyD,iBAAG;AAAG,MAAA,SAAS,EAAC;AAAb,oBAAH,CAAzD,CAAJ,CAApD,CAFiC;AAAA,GAA9B,CAAH,GAGD,IALX,CAJA,CAJP,CAJJ,EAyBI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,eAAb;AAA6B,IAAA,MAAM,EAAEV,MAArC;AACI,IAAA,KAAK,EAAE;AAAA,aAAIC,SAAS,CAAC,KAAD,CAAb;AAAA,KADX;AAEI,IAAA,MAAM,EAAE;AAFZ,KAGQ;AAAK,IAAA,KAAK,EAAE;AAACY,MAAAA,KAAK,EAAC;AAAP;AAAZ,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAA6B,IAAA,WAAW,EAAC;AAAzC,IADJ,EAEI;AAAO,IAAA,OAAO,EAAC;AAAf,kBAFJ,CADJ,CADJ,CAHR,CAzBJ,CADR;AAyCC,CA/CD;;GAAMd,K;UAEcD,S,EACQH,Q;;;KAHtBI,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport Nav from '../../../components/layout'\r\nimport Link from 'next/link'\r\nimport {Modal} from '../../../components/modal'\r\nimport {useQuery,useMutation} from '@apollo/client'\r\nimport {GET_ALL_RECORD_BY_USER_ID} from '../../../graphql/schema'\r\nimport {useRouter} from 'next/router'\r\n\r\n\r\n\r\nconst Index = ()=>{\r\n    const [isOpen,setIsOpen] = useState(false)\r\n    const {query} = useRouter()\r\n    const {data,loading} =  useQuery(GET_ALL_RECORD_BY_USER_ID,{variables:{userId:query}})\r\n\r\n\r\nreturn(\r\n        <>\r\n            <Nav />\r\n            <br /><br />\r\n            \r\n            <div className=\"container\">\r\n            <h5>Abiodun's Medical Records <button className=\"btn right indigo\" onClick={()=>setIsOpen(true)}>Add Record</button></h5><br />\r\n               {\r\n                   loading ? <p>Loading...</p>:\r\n                   <table className=\"striped\">\r\n                   <thead>\r\n                   <tr><th>#</th><th>Hospital</th><th>Created</th><th>...</th></tr>\r\n                   </thead>\r\n                   <tbody>\r\n                       {\r\n                           data ? data.getAllRecordByUserId.map(({transId,patientId,createdAt},i)=>(\r\n\r\n                               <tr><td>{1+i}.</td><td>Luth</td><td>{createdAt}</td><td><Link href=\"/hos/info/[tid]\" as={`/hos/info/${transId}`}><a><i className=\"material-icons\">visibility</i></a></Link></td></tr>\r\n                           )):null\r\n                       }\r\n                       </tbody>\r\n               </table>\r\n               }\r\n               \r\n            </div>\r\n\r\n            <Modal title=\"Create Record\" isOpen={isOpen} \r\n                close={()=>setIsOpen(false)} \r\n                isLine={true}>\r\n                    <div style={{width:\"100%\"}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m6 input-field\">\r\n                                <input type=\"text\" name=\"bp\" placeholder=\"Blood pressure\"/>\r\n                                <label htmlFor=\"bp\">First Name</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}