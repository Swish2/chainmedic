{"ast":null,"code":"import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport cookie from 'cookie';\nvar token = Cookies.get('token');\nconsole.log(token);\nexport var getClient = function getClient() {\n  var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var serverToken = '';\n\n  if (req) {\n    serverToken = cookie.parse(req.headers.cookie || '').token;\n  } else {\n    serverToken = token;\n  }\n\n  var client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: new HttpLink({\n      headers: {\n        authorization: serverToken\n      },\n      uri: 'http://localhost:5000'\n    }),\n    ssrMode: true,\n    name: 'credicity-web-client',\n    version: '1.0',\n    queryDeduplication: false,\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy: 'cache-and-network'\n      }\n    },\n    onError: function onError(_ref) {\n      var networkError = _ref.networkError,\n          graphQLErrors = _ref.graphQLErrors;\n      console.log('graphQLErrors', graphQLErrors);\n      console.log('networkError', networkError);\n    }\n  });\n  return client;\n};","map":{"version":3,"sources":["C:/Users/Abiodun Michael/Desktop/chainmedic/front/graphql/client.js"],"names":["ApolloClient","InMemoryCache","HttpLink","Cookies","cookie","token","get","console","log","getClient","req","serverToken","parse","headers","client","cache","link","authorization","uri","ssrMode","name","version","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","onError","networkError","graphQLErrors"],"mappings":"AAAA,SAASA,YAAT,EAAsBC,aAAtB,EAAoCC,QAApC,QAAoD,gBAApD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAMC,KAAK,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAd;AACAC,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAc;AAAA,MAAbC,GAAa,uEAAP,IAAO;AAErC,MAAIC,WAAW,GAAE,EAAjB;;AACF,MAAGD,GAAH,EAAO;AACLC,IAAAA,WAAW,GAAGP,MAAM,CAACQ,KAAP,CAAaF,GAAG,CAACG,OAAJ,CAAYT,MAAZ,IAAsB,EAAnC,EAAuCC,KAArD;AACD,GAFD,MAEK;AACHM,IAAAA,WAAW,GAAGN,KAAd;AACD;;AAEC,MAAMS,MAAM,GAAG,IAAId,YAAJ,CAAiB;AAC9Be,IAAAA,KAAK,EAAC,IAAId,aAAJ,EADwB;AAE9Be,IAAAA,IAAI,EAAE,IAAId,QAAJ,CAAa;AACjBW,MAAAA,OAAO,EAAC;AACNI,QAAAA,aAAa,EAACN;AADR,OADS;AAIjBO,MAAAA,GAAG,EAAC;AAJa,KAAb,CAFwB;AAO9BC,IAAAA,OAAO,EAAC,IAPsB;AAQ9BC,IAAAA,IAAI,EAAE,sBARwB;AAS9BC,IAAAA,OAAO,EAAE,KATqB;AAU9BC,IAAAA,kBAAkB,EAAE,KAVU;AAW9BC,IAAAA,cAAc,EAAE;AACdC,MAAAA,UAAU,EAAE;AACVC,QAAAA,WAAW,EAAE;AADH;AADE,KAXc;AAgB9BC,IAAAA,OAAO,EAAE,uBAAqC;AAAA,UAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,UAApBC,aAAoB,QAApBA,aAAoB;AAC5CrB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BoB,aAA7B;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BmB,YAA5B;AACD;AAnB6B,GAAjB,CAAf;AAsBA,SAAOb,MAAP;AACD,CAhCM","sourcesContent":["import { ApolloClient,InMemoryCache,HttpLink } from '@apollo/client';\r\nimport Cookies from 'js-cookie'\r\nimport cookie from 'cookie'\r\n\r\nconst token = Cookies.get('token')\r\nconsole.log(token)\r\nexport const getClient = (req = null)=>{\r\n\r\n  let serverToken =''\r\nif(req){\r\n  serverToken = cookie.parse(req.headers.cookie || '').token\r\n}else{\r\n  serverToken = token\r\n}\r\n\r\n  const client = new ApolloClient({\r\n    cache:new InMemoryCache(),\r\n    link: new HttpLink({\r\n      headers:{\r\n        authorization:serverToken,\r\n      },    \r\n      uri:'http://localhost:5000'}),\r\n    ssrMode:true,\r\n    name: 'credicity-web-client',\r\n    version: '1.0',\r\n    queryDeduplication: false,\r\n    defaultOptions: {\r\n      watchQuery: {\r\n        fetchPolicy: 'cache-and-network',\r\n      },\r\n    },\r\n    onError: ({ networkError, graphQLErrors }) => {\r\n      console.log('graphQLErrors', graphQLErrors)\r\n      console.log('networkError', networkError)\r\n    }\r\n  })\r\n\r\n  return client\r\n}\r\n\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}