{"ast":null,"code":"import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nexport var getClient = function getClient() {\n  var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var a = true ? localStorage.getItem(\"token\") : null;\n  console.log(a);\n  var client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: new HttpLink({\n      headers: {\n        authorization: a\n      },\n      uri: 'http://localhost:5000'\n    }),\n    ssrMode: true,\n    name: 'credicity-web-client',\n    version: '1.0',\n    queryDeduplication: false,\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy: 'cache-and-network'\n      }\n    },\n    onError: function onError(_ref) {\n      var networkError = _ref.networkError,\n          graphQLErrors = _ref.graphQLErrors;\n      console.log('graphQLErrors', graphQLErrors);\n      console.log('networkError', networkError);\n    }\n  });\n  return client;\n};","map":{"version":3,"sources":["C:/Users/Abiodun Michael/Desktop/chainmedic/front/graphql/client.js"],"names":["ApolloClient","InMemoryCache","HttpLink","getClient","req","a","localStorage","getItem","console","log","client","cache","link","headers","authorization","uri","ssrMode","name","version","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","onError","networkError","graphQLErrors"],"mappings":"AAAA,SAASA,YAAT,EAAsBC,aAAtB,EAAoCC,QAApC,QAAoD,gBAApD;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAc;AAAA,MAAbC,GAAa,uEAAP,IAAO;AAErC,MAAMC,CAAC,GAAG,OAAgCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhC,GAA8D,IAAxE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AAEA,MAAMK,MAAM,GAAG,IAAIV,YAAJ,CAAiB;AAC9BW,IAAAA,KAAK,EAAC,IAAIV,aAAJ,EADwB;AAE9BW,IAAAA,IAAI,EAAE,IAAIV,QAAJ,CAAa;AACjBW,MAAAA,OAAO,EAAC;AACNC,QAAAA,aAAa,EAACT;AADR,OADS;AAIjBU,MAAAA,GAAG,EAAC;AAJa,KAAb,CAFwB;AAO9BC,IAAAA,OAAO,EAAC,IAPsB;AAQ9BC,IAAAA,IAAI,EAAE,sBARwB;AAS9BC,IAAAA,OAAO,EAAE,KATqB;AAU9BC,IAAAA,kBAAkB,EAAE,KAVU;AAW9BC,IAAAA,cAAc,EAAE;AACdC,MAAAA,UAAU,EAAE;AACVC,QAAAA,WAAW,EAAE;AADH;AADE,KAXc;AAgB9BC,IAAAA,OAAO,EAAE,uBAAqC;AAAA,UAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,UAApBC,aAAoB,QAApBA,aAAoB;AAC5CjB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BgB,aAA7B;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Be,YAA5B;AACD;AAnB6B,GAAjB,CAAf;AAsBA,SAAOd,MAAP;AACD,CA5BM","sourcesContent":["import { ApolloClient,InMemoryCache,HttpLink } from '@apollo/client';\r\n\r\nexport const getClient = (req = null)=>{\r\n\r\n  const a = typeof window !== 'undefined' ? localStorage.getItem(\"token\"):null\r\n  console.log(a)\r\n\r\n  const client = new ApolloClient({\r\n    cache:new InMemoryCache(),\r\n    link: new HttpLink({\r\n      headers:{\r\n        authorization:a ,\r\n      },    \r\n      uri:'http://localhost:5000'}),\r\n    ssrMode:true,\r\n    name: 'credicity-web-client',\r\n    version: '1.0',\r\n    queryDeduplication: false,\r\n    defaultOptions: {\r\n      watchQuery: {\r\n        fetchPolicy: 'cache-and-network',\r\n      },\r\n    },\r\n    onError: ({ networkError, graphQLErrors }) => {\r\n      console.log('graphQLErrors', graphQLErrors)\r\n      console.log('networkError', networkError)\r\n    }\r\n  })\r\n\r\n  return client\r\n}\r\n\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}