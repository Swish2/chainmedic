{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Nav from '../components/layout';\nimport Link from 'next/link';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ALL_RECORD_BY_USER, CREATE_ACCESS } from '../graphql/schema';\nimport { Formik, Form, Field } from 'formik';\nimport { toast } from 'react-toastify';\nimport { Modal } from '../components/modal';\n\nconst Index = () => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(GET_ALL_RECORD_BY_USER);\n  const [createAccess] = useMutation(CREATE_ACCESS, {\n    onCompleted({\n      createAccess\n    }) {\n      if (createAccess.status) {\n        refetch();\n        toast.success(createAccess.message);\n      } else {\n        toast.error(createAccess.message);\n      }\n    },\n\n    onError(error) {}\n\n  });\n  return __jsx(React.Fragment, null, __jsx(Nav, null), __jsx(\"br\", {\n    className: \"jsx-682678643\"\n  }), __jsx(\"br\", {\n    className: \"jsx-682678643\"\n  }), __jsx(\"div\", {\n    className: \"jsx-682678643\" + \" \" + \"container\"\n  }, __jsx(\"h5\", {\n    className: \"jsx-682678643\"\n  }, \"Medical Records \", __jsx(\"button\", {\n    onClick: () => setIsOpen(true),\n    className: \"jsx-682678643\" + \" \" + \"btn right indigo\"\n  }, \"Give Access\")), __jsx(\"br\", {\n    className: \"jsx-682678643\"\n  }), loading ? __jsx(\"p\", {\n    className: \"jsx-682678643\"\n  }, \"Loading...\") : __jsx(\"table\", {\n    className: \"jsx-682678643\" + \" \" + \"striped\"\n  }, __jsx(\"thead\", {\n    className: \"jsx-682678643\"\n  }, __jsx(\"tr\", {\n    className: \"jsx-682678643\"\n  }, __jsx(\"th\", {\n    className: \"jsx-682678643\"\n  }, \"#\"), __jsx(\"th\", {\n    className: \"jsx-682678643\"\n  }, \"Hospital\"), __jsx(\"th\", {\n    className: \"jsx-682678643\"\n  }, \"Created\"), __jsx(\"th\", {\n    className: \"jsx-682678643\"\n  }, \"...\"))), __jsx(\"tbody\", {\n    className: \"jsx-682678643\"\n  }, data && data.getAllRecordByUser ? data.getAllRecordByUser.map(({\n    transId,\n    hospital,\n    createdAt\n  }, i) => __jsx(\"tr\", {\n    className: \"jsx-682678643\"\n  }, __jsx(\"td\", {\n    className: \"jsx-682678643\"\n  }, 1 + i, \".\"), __jsx(\"td\", {\n    className: \"jsx-682678643\"\n  }, hospital.name), __jsx(\"td\", {\n    className: \"jsx-682678643\"\n  }, createdAt), __jsx(\"td\", {\n    className: \"jsx-682678643\"\n  }, __jsx(Link, {\n    href: \"/hos/info/[tid]\",\n    as: `/hos/info/${transId}`\n  }, __jsx(\"a\", {\n    className: \"jsx-682678643\"\n  }, __jsx(\"i\", {\n    className: \"jsx-682678643\" + \" \" + \"material-icons\"\n  }, \"visibility\")))))) : null)), __jsx(Modal, {\n    title: \"Give Access\",\n    isOpen: isOpen,\n    close: () => setIsOpen(false),\n    isLine: true,\n    overflow: true\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    className: \"jsx-682678643\"\n  }, __jsx(\"div\", {\n    className: \"jsx-682678643\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-682678643\" + \" \" + \"col s12 m6 input-field\"\n  }, __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: (input, {\n      setSubmitting,\n      resetForm\n    }) => {\n      createAccess({\n        variables: input\n      }).then(r => {\n        console.log(r); // if(r.data.createAccess.status){\n        //     resetForm()\n        //     setIsOpen(false)\n        // }\n\n        setSubmitting(false);\n      });\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, null, __jsx(Field, {\n    name: \"email\",\n    placeholder: \"Enter Hospital Email\"\n  }), __jsx(\"button\", {\n    disabled: isSubmitting,\n    className: \"jsx-682678643\" + \" \" + \"btn indigo\"\n  }, isSubmitting ? \"Please wait...\" : \"Submit\")))))))), __jsx(_JSXStyle, {\n    id: \"682678643\"\n  }, \".input-field.jsx-682678643{margin-left:40px !important;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWJpb2R1biBNaWNoYWVsXFxEZXNrdG9wXFxjaGFpbm1lZGljXFxmcm9udFxccGFnZXNcXGRhc2hib2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRnlCLEFBR2dELDRCQUMvQiIsImZpbGUiOiJDOlxcVXNlcnNcXEFiaW9kdW4gTWljaGFlbFxcRGVza3RvcFxcY2hhaW5tZWRpY1xcZnJvbnRcXHBhZ2VzXFxkYXNoYm9hcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3Qse3VzZVN0YXRlfSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IE5hdiBmcm9tICcuLi9jb21wb25lbnRzL2xheW91dCdcclxuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xyXG5pbXBvcnQge3VzZVF1ZXJ5LHVzZU11dGF0aW9ufSBmcm9tICdAYXBvbGxvL2NsaWVudCdcclxuaW1wb3J0IHtHRVRfQUxMX1JFQ09SRF9CWV9VU0VSLENSRUFURV9BQ0NFU1N9IGZyb20gJy4uL2dyYXBocWwvc2NoZW1hJ1xyXG5pbXBvcnQge0Zvcm1payxGb3JtLEZpZWxkfSBmcm9tICdmb3JtaWsnXHJcbmltcG9ydCB7dG9hc3R9IGZyb20gJ3JlYWN0LXRvYXN0aWZ5J1xyXG5pbXBvcnQge01vZGFsfSBmcm9tICcuLi9jb21wb25lbnRzL21vZGFsJ1xyXG5cclxuXHJcblxyXG5jb25zdCBJbmRleCA9ICgpPT57XHJcbiAgICBjb25zdCBbaXNPcGVuLHNldElzT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICBcclxuICAgY29uc3Qge2RhdGEsbG9hZGluZyxyZWZldGNofSA9ICB1c2VRdWVyeShHRVRfQUxMX1JFQ09SRF9CWV9VU0VSKVxyXG5cclxuICAgY29uc3QgW2NyZWF0ZUFjY2Vzc10gPSB1c2VNdXRhdGlvbihDUkVBVEVfQUNDRVNTLHtcclxuICAgICAgIG9uQ29tcGxldGVkKHtjcmVhdGVBY2Nlc3N9KXtcclxuICAgICAgICAgICBpZihjcmVhdGVBY2Nlc3Muc3RhdHVzKXtcclxuICAgICAgICAgICAgICAgIHJlZmV0Y2goKVxyXG4gICAgICAgICAgICAgICB0b2FzdC5zdWNjZXNzKGNyZWF0ZUFjY2Vzcy5tZXNzYWdlKVxyXG4gICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0b2FzdC5lcnJvcihjcmVhdGVBY2Nlc3MubWVzc2FnZSlcclxuICAgICAgICAgICB9XHJcbiAgICAgICB9LFxyXG4gICAgICAgb25FcnJvcihlcnJvcil7XHJcblxyXG4gICAgICAgfVxyXG4gICB9KVxyXG5cclxuXHJcbnJldHVybihcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8TmF2IC8+XHJcbiAgICAgICAgICAgIDxiciAvPjxiciAvPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8aDU+TWVkaWNhbCBSZWNvcmRzIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIHJpZ2h0IGluZGlnb1wiIG9uQ2xpY2s9eygpPT5zZXRJc09wZW4odHJ1ZSl9PkdpdmUgQWNjZXNzPC9idXR0b24+PC9oNT48YnIgLz5cclxuICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgbG9hZGluZyA/IDxwPkxvYWRpbmcuLi48L3A+OlxyXG4gICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInN0cmlwZWRcIj5cclxuICAgICAgICAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgICAgIDx0cj48dGg+IzwvdGg+PHRoPkhvc3BpdGFsPC90aD48dGg+Q3JlYXRlZDwvdGg+PHRoPi4uLjwvdGg+PC90cj5cclxuICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhICYmIGRhdGEuZ2V0QWxsUmVjb3JkQnlVc2VyID8gZGF0YS5nZXRBbGxSZWNvcmRCeVVzZXIubWFwKCh7dHJhbnNJZCxob3NwaXRhbCxjcmVhdGVkQXR9LGkpPT4oXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZD57MStpfS48L3RkPjx0ZD57aG9zcGl0YWwubmFtZX08L3RkPjx0ZD57Y3JlYXRlZEF0fTwvdGQ+PHRkPjxMaW5rIGhyZWY9XCIvaG9zL2luZm8vW3RpZF1cIiBhcz17YC9ob3MvaW5mby8ke3RyYW5zSWR9YH0+PGE+PGkgY2xhc3NOYW1lPVwibWF0ZXJpYWwtaWNvbnNcIj52aXNpYmlsaXR5PC9pPjwvYT48L0xpbms+PC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICApKTpudWxsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgIDxNb2RhbCB0aXRsZT1cIkdpdmUgQWNjZXNzXCIgaXNPcGVuPXtpc09wZW59IFxyXG4gICAgICAgICAgICAgICAgY2xvc2U9eygpPT5zZXRJc09wZW4oZmFsc2UpfSBcclxuICAgICAgICAgICAgICAgIGlzTGluZT17dHJ1ZX0gb3ZlcmZsb3c9e3RydWV9PlxyXG4gICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7d2lkdGg6XCIxMDAlXCJ9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sIHMxMiBtNiBpbnB1dC1maWVsZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZvcm1pa1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdGlhbFZhbHVlcz17e2VtYWlsOlwiXCJ9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWJtaXQ9eyhpbnB1dCx7c2V0U3VibWl0dGluZyxyZXNldEZvcm19KT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZUFjY2Vzcyh7dmFyaWFibGVzOmlucHV0fSkudGhlbihyPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmKHIuZGF0YS5jcmVhdGVBY2Nlc3Muc3RhdHVzKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIHJlc2V0Rm9ybSgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBzZXRJc09wZW4oZmFsc2UpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0U3VibWl0dGluZyhmYWxzZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19Pnsoe2lzU3VibWl0dGluZ30pPT4oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Rm9ybT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RmllbGQgbmFtZT1cImVtYWlsXCIgcGxhY2Vob2xkZXI9XCJFbnRlciBIb3NwaXRhbCBFbWFpbFwiLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBpbmRpZ29cIiBkaXNhYmxlZD17aXNTdWJtaXR0aW5nfT57aXNTdWJtaXR0aW5nID8gXCJQbGVhc2Ugd2FpdC4uLlwiOlwiU3VibWl0XCJ9PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Zvcm0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0Zvcm1paz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvTW9kYWw+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgIC5pbnB1dC1maWVsZHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDo0MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICB9ICAgIFxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBJbmRleCJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Abiodun Michael\\\\\\\\Desktop\\\\\\\\chainmedic\\\\\\\\front\\\\\\\\pages\\\\\\\\dashboard.js */\"));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Abiodun Michael/Desktop/chainmedic/front/pages/dashboard.js"],"names":["React","useState","Nav","Link","useQuery","useMutation","GET_ALL_RECORD_BY_USER","CREATE_ACCESS","Formik","Form","Field","toast","Modal","Index","isOpen","setIsOpen","data","loading","refetch","createAccess","onCompleted","status","success","message","error","onError","getAllRecordByUser","map","transId","hospital","createdAt","i","name","width","email","input","setSubmitting","resetForm","variables","then","r","console","log","isSubmitting"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Nav from '../components/layout'\r\nimport Link from 'next/link'\r\nimport {useQuery,useMutation} from '@apollo/client'\r\nimport {GET_ALL_RECORD_BY_USER,CREATE_ACCESS} from '../graphql/schema'\r\nimport {Formik,Form,Field} from 'formik'\r\nimport {toast} from 'react-toastify'\r\nimport {Modal} from '../components/modal'\r\n\r\n\r\n\r\nconst Index = ()=>{\r\n    const [isOpen,setIsOpen] = useState(false)\r\n  \r\n   const {data,loading,refetch} =  useQuery(GET_ALL_RECORD_BY_USER)\r\n\r\n   const [createAccess] = useMutation(CREATE_ACCESS,{\r\n       onCompleted({createAccess}){\r\n           if(createAccess.status){\r\n                refetch()\r\n               toast.success(createAccess.message)\r\n           }else{\r\n            toast.error(createAccess.message)\r\n           }\r\n       },\r\n       onError(error){\r\n\r\n       }\r\n   })\r\n\r\n\r\nreturn(\r\n        <>\r\n            <Nav />\r\n            <br /><br />\r\n            <div className=\"container\">\r\n            <h5>Medical Records <button className=\"btn right indigo\" onClick={()=>setIsOpen(true)}>Give Access</button></h5><br />\r\n               {\r\n                   loading ? <p>Loading...</p>:\r\n                   <table className=\"striped\">\r\n                   <thead>\r\n                   <tr><th>#</th><th>Hospital</th><th>Created</th><th>...</th></tr>\r\n                   </thead>\r\n                   <tbody>\r\n                       {\r\n                           data && data.getAllRecordByUser ? data.getAllRecordByUser.map(({transId,hospital,createdAt},i)=>(\r\n\r\n                               <tr><td>{1+i}.</td><td>{hospital.name}</td><td>{createdAt}</td><td><Link href=\"/hos/info/[tid]\" as={`/hos/info/${transId}`}><a><i className=\"material-icons\">visibility</i></a></Link></td></tr>\r\n                           )):null\r\n                       }\r\n                       </tbody>\r\n               </table>\r\n               }\r\n               \r\n               <Modal title=\"Give Access\" isOpen={isOpen} \r\n                close={()=>setIsOpen(false)} \r\n                isLine={true} overflow={true}>\r\n                     <div style={{width:\"100%\"}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m6 input-field\">\r\n                            <Formik\r\n                            initialValues={{email:\"\"}}\r\n                            onSubmit={(input,{setSubmitting,resetForm})=>{\r\n                                createAccess({variables:input}).then(r=>{\r\n                                    console.log(r)\r\n                                    // if(r.data.createAccess.status){\r\n                                    //     resetForm()\r\n                                    //     setIsOpen(false)\r\n                                    // }\r\n                                    setSubmitting(false)\r\n                                })\r\n\r\n                            }}>{({isSubmitting})=>(\r\n                            <Form>\r\n                                <Field name=\"email\" placeholder=\"Enter Hospital Email\"/>\r\n                                <button className=\"btn indigo\" disabled={isSubmitting}>{isSubmitting ? \"Please wait...\":\"Submit\"}</button>\r\n                            </Form>\r\n                            )}\r\n                        </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n\r\n             <style jsx>{`\r\n                .input-field{\r\n                    margin-left:40px !important;\r\n                }    \r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}