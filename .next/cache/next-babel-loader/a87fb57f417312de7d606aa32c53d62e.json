{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CreateRecord(\\n        $bp:String,\\n        $\\n    )\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query GetAllRecordByUserId($userId:Int){\\n        getAllRecordByUserId(userId:$userId){\\n            transId\\n            createdAt\\n            hospital{\\n                name\\n            }\\n          }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query{\\n        getAccessByHospital{\\n            id\\n            createdAt\\n            user{\\n                id\\n                name\\n            }\\n        }\\n    }\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation LoginHospital(\\n        $email:String!,\\n        $password:String!\\n    ){\\n        loginHospital(input:{\\n            email:$email,\\n            password:$password\\n        }){\\n            message\\n            status\\n            token\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '@apollo/client';\nexport var LOGIN_HOSPITAL = gql(_templateObject());\nexport var GET_ACCESS_BY_HOSPITAL = gql(_templateObject2());\nexport var GET_ALL_RECORD_BY_USER_ID = gql(_templateObject3());\nexport var CREATE_RECORD = gql(_templateObject4());","map":{"version":3,"sources":["C:/Users/Abiodun Michael/Desktop/chainmedic/front/graphql/schema.js"],"names":["gql","LOGIN_HOSPITAL","GET_ACCESS_BY_HOSPITAL","GET_ALL_RECORD_BY_USER_ID","CREATE_RECORD"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,GAAR,QAAkB,gBAAlB;AAEA,OAAO,IAAMC,cAAc,GAAGD,GAAH,mBAApB;AAiBP,OAAO,IAAME,sBAAsB,GAAGF,GAAH,oBAA5B;AAeP,OAAO,IAAMG,yBAAyB,GAAGH,GAAH,oBAA/B;AAYP,OAAO,IAAMI,aAAa,GAAGJ,GAAH,oBAAnB","sourcesContent":["import {gql} from '@apollo/client'\r\n\r\nexport const LOGIN_HOSPITAL = gql`\r\n    mutation LoginHospital(\r\n        $email:String!,\r\n        $password:String!\r\n    ){\r\n        loginHospital(input:{\r\n            email:$email,\r\n            password:$password\r\n        }){\r\n            message\r\n            status\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport const GET_ACCESS_BY_HOSPITAL = gql`\r\n    query{\r\n        getAccessByHospital{\r\n            id\r\n            createdAt\r\n            user{\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n\r\n\r\nexport const GET_ALL_RECORD_BY_USER_ID = gql`\r\n    query GetAllRecordByUserId($userId:Int){\r\n        getAllRecordByUserId(userId:$userId){\r\n            transId\r\n            createdAt\r\n            hospital{\r\n                name\r\n            }\r\n          }\r\n    }\r\n`\r\n\r\nexport const CREATE_RECORD = gql`\r\n    mutation CreateRecord(\r\n        $bp:String,\r\n        $\r\n    )\r\n`"]},"metadata":{},"sourceType":"module"}