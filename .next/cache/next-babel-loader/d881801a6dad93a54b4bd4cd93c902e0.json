{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const LOGIN_HOSPITAL = gql`\n    mutation LoginHospital(\n        $email:String!,\n        $password:String!\n    ){\n        loginHospital(input:{\n            email:$email,\n            password:$password\n        }){\n            message\n            status\n            token\n        }\n    }\n`;\nexport const LOGIN_USER = gql`\n    mutation Login(\n        $email:String!,\n        $password:String!\n    ){\n        login(input:{\n            email:$email,\n            password:$password\n        }){\n            message\n            status\n            token\n        }\n    }\n`;\nexport const GET_ACCESS_BY_HOSPITAL = gql`\n    query{\n        getAccessByHospital{\n            id\n            createdAt\n            user{\n                id\n                name\n                email\n                phoneNumber\n            }\n        }\n    }\n\n`;\nexport const GET_ALL_RECORD_BY_USER_ID = gql`\n    query GetAllRecordByUserId($userId:Int){\n        getAllRecordByUserId(userId:$userId){\n            transId\n            createdAt\n            hospital{\n                name\n            }\n          }\n    }\n`;\nexport const GET_ALL_RECORD_BY_USER = gql`\n    query {\n        getAllRecordByUser{\n            transId\n            createdAt\n            hospital{\n                name\n            }\n          }\n    }\n`;\nexport const CREATE_RECORD = gql`\n    mutation CreateRecord(\n        $bp:String,\n        $diabetics:String,\n        $allergies:String,\n        $smoke:String,\n        $drink:String,\n        $surgery:String,\n        $admission:String,\n        $medication:String,\n        $kids:String,\n        $userId:Int\n    ){\n        createRecord(input:{\n            bp:$bp,\n            diabetics:$diabetics,\n            allergies:$allergies,\n            smoke:$smoke,\n            drink:$drink,\n            surgery:$surgery,\n            admission:$admission,\n            medication:$medication,\n            kids:$kids,\n            userId:$userId\n        }){\n            message\n            status\n        }\n    }\n`;\nexport const CREATE_HOSPITAL = gql`\n    mutation CreateHospital(\n        $name:String!,\n        $email:String!,\n        $phoneNumber:String!,\n        $password:String!,\n        $address:String!\n    ){\n        createHospital(input:{\n            name:$name,\n            email:$email,\n            phoneNumber:$phoneNumber,\n            password:$password,\n            address:$address\n        }){\n            message\n            status\n        }\n    }\n`;\nexport const GET_USER_INFO_BY_ID = gql`\n    query GetUserInfoById($id:Int){\n        getUserInfoById(id:$id){\n            name\n            address\n            gender\n            dateOfBirth\n            maritalStatus\n            genotype\n            bloodGroup\n            email\n            phoneNumber\n        }\n    }\n`;\nexport const CREATE_USER = gql`\n    mutation CreateUser(\n        $name:String!,\n        $email:String!,\n        $phoneNumber:String!,\n        $password:String!,\n        $address:String!\n    ){\n        createUser(input:{\n            name:$name,\n            email:$email,\n            phoneNumber:$phoneNumber,\n            password:$password,\n            address:$address\n        }){\n            message\n            status\n        }\n    }\n`;\nexport const CREATE_ACCESS = gql`\nmutation CreateAccess($email:String!)\n    {\n        createAccess(email:$email){\n        message\n        status\n        }\n    }\n`;","map":{"version":3,"sources":["C:/Users/Abiodun Michael/Desktop/chainmedic/front/graphql/schema.js"],"names":["gql","LOGIN_HOSPITAL","LOGIN_USER","GET_ACCESS_BY_HOSPITAL","GET_ALL_RECORD_BY_USER_ID","GET_ALL_RECORD_BY_USER","CREATE_RECORD","CREATE_HOSPITAL","GET_USER_INFO_BY_ID","CREATE_USER","CREATE_ACCESS"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,gBAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGD,GAAI;;;;;;;;;;;;;;CAA3B;AAgBP,OAAO,MAAME,UAAU,GAAGF,GAAI;;;;;;;;;;;;;;CAAvB;AAiBP,OAAO,MAAMG,sBAAsB,GAAGH,GAAI;;;;;;;;;;;;;;CAAnC;AAiBP,OAAO,MAAMI,yBAAyB,GAAGJ,GAAI;;;;;;;;;;CAAtC;AAWP,OAAO,MAAMK,sBAAsB,GAAGL,GAAI;;;;;;;;;;CAAnC;AAYP,OAAO,MAAMM,aAAa,GAAGN,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA1B;AA+BP,OAAO,MAAMO,eAAe,GAAGP,GAAI;;;;;;;;;;;;;;;;;;;CAA5B;AAqBP,OAAO,MAAMQ,mBAAmB,GAAGR,GAAI;;;;;;;;;;;;;;CAAhC;AAgBP,OAAO,MAAMS,WAAW,GAAGT,GAAI;;;;;;;;;;;;;;;;;;;CAAxB;AAqBP,OAAO,MAAMU,aAAa,GAAGV,GAAI;;;;;;;;CAA1B","sourcesContent":["import {gql} from '@apollo/client'\r\n\r\nexport const LOGIN_HOSPITAL = gql`\r\n    mutation LoginHospital(\r\n        $email:String!,\r\n        $password:String!\r\n    ){\r\n        loginHospital(input:{\r\n            email:$email,\r\n            password:$password\r\n        }){\r\n            message\r\n            status\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation Login(\r\n        $email:String!,\r\n        $password:String!\r\n    ){\r\n        login(input:{\r\n            email:$email,\r\n            password:$password\r\n        }){\r\n            message\r\n            status\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport const GET_ACCESS_BY_HOSPITAL = gql`\r\n    query{\r\n        getAccessByHospital{\r\n            id\r\n            createdAt\r\n            user{\r\n                id\r\n                name\r\n                email\r\n                phoneNumber\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n\r\n\r\nexport const GET_ALL_RECORD_BY_USER_ID = gql`\r\n    query GetAllRecordByUserId($userId:Int){\r\n        getAllRecordByUserId(userId:$userId){\r\n            transId\r\n            createdAt\r\n            hospital{\r\n                name\r\n            }\r\n          }\r\n    }\r\n`\r\nexport const GET_ALL_RECORD_BY_USER = gql`\r\n    query {\r\n        getAllRecordByUser{\r\n            transId\r\n            createdAt\r\n            hospital{\r\n                name\r\n            }\r\n          }\r\n    }\r\n`\r\n\r\nexport const CREATE_RECORD = gql`\r\n    mutation CreateRecord(\r\n        $bp:String,\r\n        $diabetics:String,\r\n        $allergies:String,\r\n        $smoke:String,\r\n        $drink:String,\r\n        $surgery:String,\r\n        $admission:String,\r\n        $medication:String,\r\n        $kids:String,\r\n        $userId:Int\r\n    ){\r\n        createRecord(input:{\r\n            bp:$bp,\r\n            diabetics:$diabetics,\r\n            allergies:$allergies,\r\n            smoke:$smoke,\r\n            drink:$drink,\r\n            surgery:$surgery,\r\n            admission:$admission,\r\n            medication:$medication,\r\n            kids:$kids,\r\n            userId:$userId\r\n        }){\r\n            message\r\n            status\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_HOSPITAL = gql`\r\n    mutation CreateHospital(\r\n        $name:String!,\r\n        $email:String!,\r\n        $phoneNumber:String!,\r\n        $password:String!,\r\n        $address:String!\r\n    ){\r\n        createHospital(input:{\r\n            name:$name,\r\n            email:$email,\r\n            phoneNumber:$phoneNumber,\r\n            password:$password,\r\n            address:$address\r\n        }){\r\n            message\r\n            status\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_USER_INFO_BY_ID = gql`\r\n    query GetUserInfoById($id:Int){\r\n        getUserInfoById(id:$id){\r\n            name\r\n            address\r\n            gender\r\n            dateOfBirth\r\n            maritalStatus\r\n            genotype\r\n            bloodGroup\r\n            email\r\n            phoneNumber\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_USER = gql`\r\n    mutation CreateUser(\r\n        $name:String!,\r\n        $email:String!,\r\n        $phoneNumber:String!,\r\n        $password:String!,\r\n        $address:String!\r\n    ){\r\n        createUser(input:{\r\n            name:$name,\r\n            email:$email,\r\n            phoneNumber:$phoneNumber,\r\n            password:$password,\r\n            address:$address\r\n        }){\r\n            message\r\n            status\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_ACCESS = gql`\r\nmutation CreateAccess($email:String!)\r\n    {\r\n        createAccess(email:$email){\r\n        message\r\n        status\r\n        }\r\n    }\r\n`"]},"metadata":{},"sourceType":"module"}